
default: all

ifeq (1,$(words $(TRAIN)))

#results.txt: pre.${TRAIN}.results.txt post.${TRAIN}.results.txt pre.${TEST}.results.txt post.${TEST}.results.txt
#	echo phase subset uR mR uMRR mMRR uMAP mMAP > $@
#	cat $^ >> $@

post.%.solutions.txt: %.examples params.wts $(PROGRAM_DEPS)
	java ${JOPTS} -cp ${CP} edu.cmu.ml.proppr.QueryAnswerer --programFiles ${PROGRAM} --queries $< --solutions $@ --prover ${PROVER} --threads ${THREADS} --params $(word 2,$^)  --apr ${APR} ${UNNORMALIZED}

#post.%.gradient: %.examples.grounded params.wts $(PROGRAM_DEPS)
#	java ${JOPTS} -cp ${CP} edu.cmu.ml.proppr.GradientFinder --grounded $(word 1,$^) --params $(word 2,$^) --threads ${THREADS} --apr ${APR} --epochs ${EPOCHS} --srw ${SRW} --gradient $@

params.wts: ${TRAIN}.examples.grounded
	java ${JOPTS} -cp ${CP} edu.cmu.ml.proppr.Trainer --train $< --params $@ --threads ${THREADS} --srw ${SRW} --epochs ${EPOCHS} --apr ${APR}

endif

%.results.txt: %.solutions.txt
	python ${PROPPR}/scripts/answermetrics.py --data $(subst $(word 1,$(subst ., ,$*)).,,$*).examples --answers $< --metric recall --metric mrr --metric map |\
	grep -e "micro:" -e "macro:" |\
	awk '{print $$3}' |\
	tr "\n" " " |\
	awk '{name="$*"; gsub("\."," ",name); print name,$$0}' > $@
	cat $@

pre.%.solutions.txt: %.examples $(PROGRAM_DEPS)
	java ${JOPTS} -cp ${CP} edu.cmu.ml.proppr.QueryAnswerer --programFiles ${PROGRAM} --queries $< --solutions $@ --prover ${PROVER} --threads ${THREADS} --apr ${APR} ${UNNORMALIZED}


%.examples.grounded: %.examples $(PROGRAM_DEPS)
	java ${JOPTS} -cp ${CP} edu.cmu.ml.proppr.Grounder --programFiles ${PROGRAM} --queries $< --grounded $@ --prover ${PROVER} --threads ${THREADS} --apr ${APR}

%.wam: %.ppr
	python ${PROPPR}/src/scripts/compiler.py serialize $< > $@

pre.%.solutions.labeled.txt: %.examples pre.%.solutions.txt
	${PROPPR}/scripts/solutions2labeled.pl $^ $@

post.%.solutions.labeled.txt: %.examples post.%.solutions.txt
	${PROPPR}/scripts/solutions2labeled.pl $^ $@

.SECONDARY:
